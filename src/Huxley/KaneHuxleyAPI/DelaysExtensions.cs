// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace KaneHuxleyAPI
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;
    using Microsoft.Rest;
    using Models;

    /// <summary>
    /// Extension methods for Delays.
    /// </summary>
    public static partial class DelaysExtensions
    {
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='crs'>
            /// </param>
            /// <param name='filtertype'>
            /// </param>
            /// <param name='filtercrs'>
            /// </param>
            /// <param name='numrows'>
            /// </param>
            /// <param name='board'>
            /// </param>
            /// <param name='crs1'>
            /// </param>
            /// <param name='filtertype1'>
            /// </param>
            /// <param name='filtercrs1'>
            /// </param>
            /// <param name='numrows1'>
            /// </param>
            /// <param name='std'>
            /// </param>
            /// <param name='expand'>
            /// </param>
            /// <param name='accesstoken'>
            /// </param>
            public static DelaysResponse GetBycrsfiltertypefiltercrsnumrowsboardcrsfiltertypefiltercrsnumrowsstdexpandaccesstoken(this IDelays operations, string crs, string filtertype, string filtercrs, string numrows, int? board = default(int?), string crs1 = default(string), int? filtertype1 = default(int?), string filtercrs1 = default(string), int? numrows1 = default(int?), string std = default(string), bool? expand = default(bool?), string accesstoken = default(string))
            {
                return Task.Factory.StartNew(s => ((IDelays)s).GetBycrsfiltertypefiltercrsnumrowsboardcrsfiltertypefiltercrsnumrowsstdexpandaccesstokenAsync(crs, filtertype, filtercrs, numrows, board, crs1, filtertype1, filtercrs1, numrows1, std, expand, accesstoken), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='crs'>
            /// </param>
            /// <param name='filtertype'>
            /// </param>
            /// <param name='filtercrs'>
            /// </param>
            /// <param name='numrows'>
            /// </param>
            /// <param name='board'>
            /// </param>
            /// <param name='crs1'>
            /// </param>
            /// <param name='filtertype1'>
            /// </param>
            /// <param name='filtercrs1'>
            /// </param>
            /// <param name='numrows1'>
            /// </param>
            /// <param name='std'>
            /// </param>
            /// <param name='expand'>
            /// </param>
            /// <param name='accesstoken'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<DelaysResponse> GetBycrsfiltertypefiltercrsnumrowsboardcrsfiltertypefiltercrsnumrowsstdexpandaccesstokenAsync(this IDelays operations, string crs, string filtertype, string filtercrs, string numrows, int? board = default(int?), string crs1 = default(string), int? filtertype1 = default(int?), string filtercrs1 = default(string), int? numrows1 = default(int?), string std = default(string), bool? expand = default(bool?), string accesstoken = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetBycrsfiltertypefiltercrsnumrowsboardcrsfiltertypefiltercrsnumrowsstdexpandaccesstokenWithHttpMessagesAsync(crs, filtertype, filtercrs, numrows, board, crs1, filtertype1, filtercrs1, numrows1, std, expand, accesstoken, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
